<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/forms/__init__.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/forms/news_form.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/forms/password_update_form.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/forms/upload_analusics_form.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/forms/user_login_form.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/forms/user_profile_form.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/forms/user_register_form.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/migrations/views/analysis_views.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/migrations/views/auth_views.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/migrations/views/news_views.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/migrations/views/profile_views.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/migrations/0001_initial.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/migrations/__init__.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/models/__init__.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/models/analysis.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/models/news.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/models/user.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/static/css/base.css;C:/Users/Spirit/PycharmProjects/ML-Django/app/static/css/result.css;C:/Users/Spirit/PycharmProjects/ML-Django/app/static/css/upload.css;C:/Users/Spirit/PycharmProjects/ML-Django/app/static/js/upload.js;C:/Users/Spirit/PycharmProjects/ML-Django/app/templates/app/add_news.html;C:/Users/Spirit/PycharmProjects/ML-Django/app/templates/app/base.html;C:/Users/Spirit/PycharmProjects/ML-Django/app/templates/app/index.html;C:/Users/Spirit/PycharmProjects/ML-Django/app/templates/app/login.html;C:/Users/Spirit/PycharmProjects/ML-Django/app/templates/app/profile.html;C:/Users/Spirit/PycharmProjects/ML-Django/app/templates/app/register.html;C:/Users/Spirit/PycharmProjects/ML-Django/app/templates/app/upload_analysis.html;C:/Users/Spirit/PycharmProjects/ML-Django/app/templates/app/upload_analysis_result.html;C:/Users/Spirit/PycharmProjects/ML-Django/app/__init__.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/admin.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/apps.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/tests.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/urls.py;C:/Users/Spirit/PycharmProjects/ML-Django/app/wsgi.py;C:/Users/Spirit/PycharmProjects/ML-Django/ml_model/__init__.py;C:/Users/Spirit/PycharmProjects/ML-Django/ml_model/model_module.py;C:/Users/Spirit/PycharmProjects/ML-Django/settings/__init__.py;C:/Users/Spirit/PycharmProjects/ML-Django/settings/settings.py;C:/Users/Spirit/PycharmProjects/ML-Django/settings/urls.py;C:/Users/Spirit/PycharmProjects/ML-Django/manage.py;C:/Users/Spirit/PycharmProjects/ML-Django/README.md;C:/Users/Spirit/PycharmProjects/ML-Django/testing_modules.py" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/Spirit/PycharmProjects/ML-Django&quot;:&quot;{\&quot;/app/urls.py\&quot;:\&quot;This file defines the URL patterns for a Django web application. It does not contain any classes, but it defines the following functions:\\n\\n`news_views.index`: Renders the index page of the news section.\\n`auth_views.login_view`: Handles the login functionality.\\n`auth_views.logout_view`: Handles the logout functionality.\\n`auth_views.register_view`: Handles the user registration functionality.\\n`profile_views.profile_view`: Renders the user profile page.\\n`news_views.add_news`: Handles the addition of new news items.\\n`analysis_views.upload_analysis`: Handles the upload of analysis data.\\n\\nThe file sets the app name to \\u0027app\\u0027 and defines the URL patterns for the various views in the application.\&quot;,\&quot;/app/migrations/views/auth_views.py\&quot;:\&quot;This file contains three functions:\\n\\n`register_view`: Handles the user registration process, including creating a new user and logging them in.\\n\\n`login_view`: Handles the user login process, authenticating the user and logging them in.\\n\\n`logout_view`: Handles the user logout process, logging the user out and redirecting them to the login page.\\n\\nThe file does not contain any classes.\&quot;,\&quot;/app/models/analysis.py\&quot;:\&quot;This file defines a Django model called `Analysis` that represents an analysis performed by a user. The model has the following fields:\\n\\n`Analysis`: Represents an analysis performed by a user, including the associated user, the uploaded PDF file, the analysis result, and the creation timestamp.\&quot;,\&quot;/app/tests.py\&quot;:\&quot;This file appears to be a Django test file, which is used to write and run automated tests for a Django application. The file currently does not contain any classes or functions, but it is intended to be a place where developers can write test cases for their Django application.\\n\\nThe file starts with the necessary import statement to use the `TestCase` class from the `django.test` module, which provides a base class for writing Django-specific test cases.\\n\\nOverall, this file serves as a placeholder for writing test cases for the Django application, but it does not currently contain any specific tests or functionality.\&quot;,\&quot;/app/forms/user_login_form.py\&quot;:\&quot;This file defines a custom Django form for user authentication.\\n\\n`UserLoginForm`: A custom form that extends the `AuthenticationForm` and adds labels for the username and password fields.\&quot;,\&quot;/app/models/__init__.py\&quot;:\&quot;This file is an `__init__.py` file, which is used to define the package structure for the `models` module. It imports three classes from other files within the `models` package:\\n\\n`User`: A class that represents a user of the application.\\n`News`: A class that represents a news article or post.\\n`Analysis`: A class that represents an analysis or report related to the application\\u0027s data.\\n\\nThis file does not contain any functions, but rather serves to make these classes available for use throughout the application.\&quot;,\&quot;/app/static/css/base.css\&quot;:\&quot;This file appears to be a CSS stylesheet that defines the styles for a web page. It does not contain any classes or functions, but rather defines various styles for the page elements. Here\\u0027s a summary of the styles defined in the file:\\n\\n`:root`: Defines the primary and dark color variables used throughout the stylesheet.\\n\\n`body`: Defines the base styles for the body of the page, including the font, line height, color, background color, and padding.\\n\\n`.top-nav`: Defines the styles for the top navigation bar, including the background color, text color, padding, and positioning.\\n\\n`.nav-bar`: Defines the styles for the navigation bar, including the display, flex direction, alignment, font size, and padding.\\n\\n`.user-greeting`: Defines the styles for the user greeting text, including the color, font size, and font weight.\\n\\n`.btn`: Defines the styles for the buttons used in the page, including the background color, text color, border, padding, border radius, font weight, font size, text decoration, and transition.\\n\\n`.user-greeting::before`: Adds an empty content before the user greeting text.\\n\\n`.btn::first-letter`: Capitalizes the first letter of the button text.\&quot;,\&quot;/app/templates/app/base.html\&quot;:\&quot;This file appears to be a Django template that serves as the base template for a website. It does not contain any classes or functions, but rather defines the overall structure and layout of the website. Here\\u0027s a summary of what the file does:\\n\\n`base.html`: This file defines the basic structure of the website, including the header, navigation menu, and a content area where the specific page content will be rendered.\\n\\nThe template includes several blocks that can be overridden by child templates, such as the `title` and `extra_css` blocks. It also includes conditional logic to display different navigation options based on whether the user is authenticated or not.\\n\\nOverall, this file provides a consistent and reusable structure for the website, allowing child templates to focus on the specific content and functionality of each page.\&quot;,\&quot;/settings/urls.py\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines the URL patterns for a Django web application.\\n\\nThe file sets up the following URL patterns:\\n\\n`path(\\u0027admin/\\u0027, admin.site.urls)`: This pattern maps the `/admin/` URL to the Django admin site.\\n\\n`path(\\u0027\\u0027, include(\\u0027app.urls\\u0027, namespace\\u003d\\u0027app\\u0027))`: This pattern includes the URL patterns defined in the `app.urls` module, with the namespace `\\u0027app\\u0027`.\\n\\nIn summary, this file is responsible for configuring the URL routing for the Django web application, directing requests to the appropriate views and applications.\&quot;,\&quot;/app/models/news.py\&quot;:\&quot;This file defines a single Django model called `News` that represents a news article. The model has three fields: `title`, `content`, and `created_at`.\\n\\n`News`: A Django model that represents a news article with a title, content, and creation timestamp.\&quot;,\&quot;/app/forms/password_update_form.py\&quot;:\&quot;`PasswordUpdateForm`: A custom form that extends the `PasswordChangeForm` from Django\\u0027s authentication system, allowing users to update their password with additional validation rules.\\n\\n`clean_old_password`: Validates the old password field, allowing it to be optional if the new password field is empty.\\n\\n`clean_new_password1`: Validates the new password field, ensuring it is at least 8 characters long.\\n\\n`clean_new_password2`: Validates the confirmation password field, ensuring it matches the new password.\\n\\nThis file defines a custom Django form for updating a user\\u0027s password, with additional validation rules to ensure the password meets certain requirements.\&quot;,\&quot;/app/templates/app/upload_analysis.html\&quot;:\&quot;This file is a Django template that extends the base template and provides a form for uploading a PDF file. It includes CSS and JavaScript files for styling and interactivity. The template does not contain any classes or functions, but it performs the following tasks:\\n\\n`upload-container`: A container for the upload form.\\n`upload-title`: The title of the upload form.\\n`upload-form`: The form for uploading the PDF file, which includes a file input and a submit button.\\n`file-label`: A label for the file input, with a button and a file name display.\\n`file-button`: The button for selecting the PDF file.\\n`file-name`: The display for the selected file name.\\n`pdf_file`: The file input field for the PDF file.\\n`error-message`: A container for displaying any errors related to the PDF file input.\\n`submit-button`: The button for submitting the form.\&quot;,\&quot;/app/static/js/upload.js\&quot;:\&quot;This file does not contain any classes or functions. Instead, it listens for the `DOMContentLoaded` event, which is triggered when the initial HTML document has been completely loaded and parsed. Once the event is triggered, the code checks if two HTML elements with specific IDs (`id_pdf_file` and `file-name`) exist. If they do, it adds an event listener to the `id_pdf_file` element, which listens for the `change` event. When the `change` event is triggered (i.e., when a file is selected), the code retrieves the name of the selected file and updates the text content of the `file-name` element to display the file name.\&quot;,\&quot;/app/forms/upload_analusics_form.py\&quot;:\&quot;This file contains a Django form and a function to extract patient data from a PDF file.\\n\\n`UploadAnalysisForm`: A Django model form for uploading a PDF file.\\n\\n`extract_patient_data`: A function that extracts patient data (Glucose, Pregnancies, BMI, Age, Insulin, SkinThickness) from a PDF file in Russian language.\&quot;,\&quot;/app/templates/app/register.html\&quot;:\&quot;This file appears to be a Django template for a user registration page. It extends the base template and includes a form for users to register. The file does not contain any classes or functions, but rather defines the structure and content of the registration page.\\n\\nThe main components of the file are:\\n\\n`{% extends \\u0027app/base.html\\u0027 %}`: Extends the base template, which likely contains the overall layout and structure of the web page.\\n\\n`{% load static %}`: Loads the static files, such as CSS, for the page.\\n\\n`{% block extra_css %}`: Defines a block for additional CSS files to be included in the page.\\n\\n`{% block content %}`: Defines the main content block of the page, which includes the registration form.\\n\\n`\\u003cdiv class\\u003d\\\&quot;form-container\\\&quot;\\u003e`: Contains the registration form.\\n\\n`\\u003cform method\\u003d\\\&quot;post\\\&quot;\\u003e`: Defines the form for user registration, which includes fields for user input and a submit button.\\n\\n`{% csrf_token %}`: Includes a CSRF token to protect against cross-site request forgery.\\n\\n`{{ form.non_field_errors }}`: Displays any non-field errors that may occur during form validation.\\n\\n`{% for field in form %}`: Iterates through the form fields and displays them with appropriate labels, error messages, and help text.\\n\\n`\\u003cbutton type\\u003d\\\&quot;submit\\\&quot; class\\u003d\\\&quot;btn btn-primary\\\&quot;\\u003e`: Defines the submit button for the registration form.\\n\\n`\\u003ca href\\u003d\\\&quot;{% url \\u0027app:login\\u0027 %}\\\&quot; class\\u003d\\\&quot;btn\\\&quot; style\\u003d\\\&quot;margin-left: 10px;\\\&quot;\\u003e`: Provides a link for users to log in if they already have an account.\&quot;,\&quot;/ml_model/model_module.py\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`predict_glucose_level`: This function takes in a set of input data `X` and uses a pre-trained machine learning model to predict whether there is a risk of diabetes based on the input data, returning a string indicating the prediction.\\n\\nThe file also imports the `joblib` module and loads a pre-trained machine learning model from a file named `\\u0027ml_model/modelCB.pkl\\u0027`.\&quot;,\&quot;/manage.py\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`main()`: This function sets the Django settings module, imports the Django command management system, and executes the command line arguments.\\n\\nThe file serves as the entry point for a Django project, setting up the necessary environment and executing the appropriate Django commands based on the command line arguments provided.\&quot;,\&quot;/settings/settings.py\&quot;:\&quot;This file appears to be a Django project\\u0027s settings configuration. It does not contain any classes or functions, but rather a set of configuration variables and settings for the Django project. Here\\u0027s a summary of what the file does:\\n\\n1. It sets the base directory of the project using `Path` from the `pathlib` module.\\n2. It configures various Django settings such as `DEBUG`, `ALLOWED_HOSTS`, `INSTALLED_APPS`, `MIDDLEWARE`, `ROOT_URLCONF`, `WSGI_APPLICATION`, `TEMPLATES`, `DATABASES`, `AUTH_PASSWORD_VALIDATORS`, `LANGUAGE_CODE`, `TIME_ZONE`, `STATIC_URL`, `STATIC_ROOT`, `STATICFILES_DIRS`, `AUTH_USER_MODEL`, `MEDIA_URL`, `MEDIA_ROOT`, `LOGIN_URL`, and `SECRET_KEY`.\\n3. These settings control the behavior of the Django application, including database connections, authentication, static file handling, and more.\&quot;,\&quot;/app/migrations/__init__.py\&quot;:\&quot;There is no code provided in the given input, so I cannot list the names of classes and functions or provide summaries for them. The file appears to be an empty XML document, which does not contain any classes or functions. Without any code to analyze, I can only summarize that this file is an empty XML document, which is typically used as a container for structured data.\&quot;,\&quot;/app/apps.py\&quot;:\&quot;This file defines a Django application configuration class.\\n\\n`AppConfig`: This class configures the Django application, setting the default auto field to `BigAutoField` and specifying the name of the application as `\\u0027app\\u0027`.\&quot;,\&quot;/app/templates/app/profile.html\&quot;:\&quot;This file appears to be a Django template that extends the `base.html` template and provides a view for editing a user\\u0027s profile and changing their password.\\n\\n`base.html`: This is the base template that the current template extends, providing a common structure and layout for the application.\\n\\n`profile.css`: This is a CSS file that is loaded to style the profile page.\\n\\n`base.css`: This is a CSS file that is loaded to style the base template.\\n\\nThe template contains two main sections:\\n\\n1. The \\\&quot;Редактирование профиля\\\&quot; (Edit Profile) section, which displays a form for the user to update their profile information.\\n2. The \\\&quot;Изменить пароль\\\&quot; (Change Password) section, which displays a form for the user to change their password.\\n\\nThe template uses Django\\u0027s template tags and forms to render the necessary HTML elements and handle form submissions.\&quot;,\&quot;/app/models/user.py\&quot;:\&quot;This file defines a custom `User` model that extends the `AbstractUser` model from Django\\u0027s built-in `auth` module. The `User` model includes a `role` field that can be either \\u0027doctor\\u0027 or \\u0027patient\\u0027, and it also includes many-to-many relationships with Django\\u0027s `Group` and `Permission` models.\\n\\n`User`: A custom user model that extends the `AbstractUser` model and includes a `role` field.\&quot;,\&quot;/testing_modules.py\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`extract_patient_data`: Extracts patient data such as glucose level, number of pregnancies, BMI, age, insulin, and skin thickness from a PDF file in Russian.\\n\\n`predict_glucose_level`: This function is not defined in the provided code, but it is called to predict the glucose level based on the extracted patient data.\\n\\nThe main purpose of this file is to extract patient data from a PDF file and use a machine learning model to predict the glucose level of the patient.\&quot;,\&quot;/app/templates/app/login.html\&quot;:\&quot;This file is a Django template that extends the `base.html` template and provides a login form for users. It includes CSS styling and handles form validation and error messages.\\n\\n`base.css`: This file provides the base CSS styles for the application.\\n\\n`form-container`: This class defines the styling for the login form container.\\n\\n`form-group`: This class defines the styling for each form group (label and input field).\\n\\n`error-message`: This class defines the styling for error messages displayed in the form.\\n\\nThe file does not contain any functions. It focuses on providing the HTML structure and styling for the login page.\&quot;,\&quot;/app/forms/__init__.py\&quot;:\&quot;There are no classes or functions in the provided document. The document appears to be an empty XML document, which does not contain any meaningful content.\&quot;,\&quot;/app/migrations/views/profile_views.py\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`profile_view`: This function handles the user profile view, allowing the user to update their profile information and change their password.\\n\\nThe file is responsible for rendering the user profile page, handling the submission of the profile update and password change forms, and redirecting the user to the profile page upon successful updates.\&quot;,\&quot;/app/wsgi.py\&quot;:\&quot;This file does not contain any classes or functions. Instead, it sets up the Django WSGI (Web Server Gateway Interface) application for the project. Specifically, it:\\n\\n1. Imports the necessary modules (`os` and `get_wsgi_application` from `django.core.wsgi`).\\n2. Sets the `DJANGO_SETTINGS_MODULE` environment variable to the location of the Django project\\u0027s settings file (`settings.settings`).\\n3. Retrieves the WSGI application using `get_wsgi_application()` and assigns it to the `application` variable, which can be used by the web server to serve the Django application.\&quot;,\&quot;/app/templates/app/upload_analysis_result.html\&quot;:\&quot;This file is a Django template that extends the base template and displays the results of a diabetes analysis. It does not contain any classes or functions, but rather, it defines the structure and content of the result page.\\n\\nThe main elements in this file are:\\n\\n`result-container`: The main container for the result section.\\n`result-title`: The title of the result section.\\n`file-info`: Displays information about the uploaded file, such as the file name and the date of upload.\\n`prediction-section`: Displays the result of the analysis, indicating whether the patient has signs of diabetes or not.\\n`details`: Displays the extracted data used for the analysis, such as glucose level, number of pregnancies, BMI, age, insulin level, and skin thickness.\\n`home-link`: A link to navigate back to the home page.\&quot;,\&quot;/app/forms/user_register_form.py\&quot;:\&quot;`UserRegisterForm`: A Django form that extends the `UserCreationForm` and adds additional fields for user registration, including role and email.\\n\\nThis file defines a custom Django form called `UserRegisterForm` that extends the built-in `UserCreationForm`. The form includes additional fields for the user\\u0027s role and email, and is used for user registration in the application.\&quot;,\&quot;/app/migrations/views/news_views.py\&quot;:\&quot;This file contains the views for the news-related functionality of a Django web application. It does not contain any classes, but rather several functions that handle the display of news articles and the creation of new news articles.\\n\\n`index`: This function retrieves the latest news articles from the database and renders them on the application\\u0027s index page.\\n\\n`add_news`: This function handles the creation of new news articles. It renders a form for the user to input the news details, and upon form submission, it saves the new news article to the database.\&quot;,\&quot;/settings/__init__.py\&quot;:\&quot;There is no code provided in the given XML document, so I cannot list any class or function names. The document appears to be an empty XML document with only the opening and closing `\\u003cdocument\\u003e` tags. Without any code, I cannot provide a meaningful summary of the file\\u0027s purpose. If you provide the actual code, I\\u0027d be happy to analyze it and provide the requested information.\&quot;,\&quot;/app/migrations/views/analysis_views.py\&quot;:\&quot;This file contains a Django view function that handles the upload and analysis of a PDF file containing patient data. The view function uses the `UploadAnalysisForm` form to handle the file upload, extracts the patient data from the PDF, and then uses a machine learning model to predict the patient\\u0027s glucose level. The view function then renders a template with the analysis results.\\n\\n`upload_analysis`: This function handles the upload and analysis of a PDF file containing patient data, extracts the patient data, uses a machine learning model to predict the glucose level, and renders a template with the analysis results.\&quot;,\&quot;/app/__init__.py\&quot;:\&quot;There is no code provided in the given XML document, so I cannot list any class or function names. The document appears to be an empty XML document with only the opening and closing `\\u003cdocument\\u003e` tags. Without any actual code, I cannot provide a meaningful summary of the file\\u0027s purpose. If you provide the actual code, I\\u0027d be happy to analyze it and provide the requested information.\&quot;,\&quot;/app/static/css/upload.css\&quot;:\&quot;This file appears to be a CSS stylesheet that defines the styles for a file upload container. It does not contain any classes or functions, but rather defines the styles for various elements within the container. Here\\u0027s a summary of the styles:\\n\\n`.upload-container`: Defines the styles for the main container that holds the file upload functionality, including a maximum width, margin, padding, background color, border radius, and box shadow.\\n\\n`.upload-title`: Defines the styles for the title of the file upload container, including the color and text alignment.\\n\\n`.file-label`: Defines the styles for the label that accompanies the file input, including a display block and a cursor pointer.\\n\\n`.file-button`: Defines the styles for the button that triggers the file selection, including the background color, text color, border radius, and hover transition.\\n\\n`#id_pdf_file`: Hides the actual file input element.\\n\\n`.error-message`: Defines the styles for an error message that may be displayed, including the text color.\\n\\n`.submit-button`: Defines the styles for the submit button, including the width, padding, background color, text color, border radius, font size, cursor, and hover transition.\&quot;,\&quot;/ml_model/__init__.py\&quot;:\&quot;There is no code provided in the given XML document, so I cannot list any class or function names. The document appears to be an empty XML document with only the opening and closing `\\u003cdocument\\u003e` tags. Without any code, I cannot provide a summary of the file\\u0027s functionality. If you provide the actual code, I\\u0027d be happy to analyze it and provide the requested information.\&quot;,\&quot;/app/templates/app/index.html\&quot;:\&quot;This file is a Django template that extends the `base.html` template and displays a list of news articles. It also includes a button to add a new news article (if the user is a doctor) and a button to upload an analysis (if the user is authenticated).\\n\\n`base.css`: This file is a CSS file that is included in the template.\&quot;,\&quot;/app/static/css/profile.css\&quot;:\&quot;This file contains CSS styles for a profile page layout. It does not contain any classes or functions, but rather defines the styles for various elements on the page.\\n\\n`.profile-container`: Styles the container for the profile content, including the layout and spacing.\\n\\n`.profile-card`: Styles the individual profile card, including the background, padding, border radius, and box shadow.\\n\\n`.profile-card:hover`: Defines the hover effect for the profile card, causing it to move up slightly.\\n\\n`.card h2`: Styles the heading within the profile card, including the bottom border and color.\\n\\n`.form-group label`: Styles the labels for form inputs, including the display, margin, color, and font weight.\\n\\n`.form-group input, .form-group select, .form-group textarea`: Styles the form inputs, including the width, margin, padding, border, and font size.\\n\\n`.form-group input:focus, .form-group select:focus, .form-group textarea:focus`: Defines the styles for form inputs when they are focused, including the border color and box shadow.\\n\\n`.error-message`: Styles the error messages that may be displayed for form inputs, including the color and font size.\\n\\n`.btn-primary`: Styles the primary button, including the background color, text color, padding, border, font size, and cursor.\\n\\n`.btn-primary:hover`: Defines the hover effect for the primary button, changing the background color.\&quot;,\&quot;/app/static/css/result.css\&quot;:\&quot;This file appears to be a CSS stylesheet that defines the styles for a web page or component. It does not contain any classes or functions, but rather a set of CSS rules that style various elements on the page. Here\\u0027s a summary of the main styles defined in the file:\\n\\n`.result-container`: Styles the main container for the result content, including a maximum width, margin, padding, background color, and box shadow.\\n\\n`.result-title`: Styles the title of the result, including the color and text alignment.\\n\\n`.file-info`: Styles the container for file information, including a background color and padding.\\n\\n`.prediction-section`: Styles the container for the prediction section.\\n\\n`.prediction-box`: Styles the individual prediction boxes, including different styles for positive and negative predictions.\\n\\n`.details`: Styles the container for additional details, including a background color, border radius, and box shadow.\\n\\n`.details ul`: Styles the list of details, including removing the list style and adding a bottom border.\\n\\n`.home-link`: Styles the link to the home page, including a background color, text color, and hover effect.\\n\\nOverall, this CSS file appears to be part of a web application that displays the results of some kind of prediction or analysis, with various sections and styles to present the information in a clear and organized manner.\&quot;,\&quot;/app/forms/news_form.py\&quot;:\&quot;This file defines a Django form for creating or updating news articles. It contains the following:\\n\\n`NewsForm`: A Django ModelForm that allows creating or updating news articles with the `title` and `content` fields.\\n\\nThe file does not contain any functions. It simply defines a Django form for interacting with the `News` model in the application.\&quot;,\&quot;/app/migrations/0001_initial.py\&quot;:\&quot;This file appears to be a Django migration file that defines the initial database schema for a Django application. It creates three models:\\n\\n`News`: A model for news articles, with fields for title, content, and creation date.\\n\\n`User`: A custom user model that extends the built-in Django `User` model, with additional fields for role (doctor or patient) and a many-to-many relationship with Django\\u0027s built-in `Group` and `Permission` models.\\n\\n`Analysis`: A model for storing analysis files (PDF) uploaded by users, with fields for the file, the analysis result, and the user who uploaded the file.\\n\\nThe file does not contain any functions, only the definitions of the three models.\&quot;,\&quot;/app/templates/app/add_news.html\&quot;:\&quot;This file is a Django template that extends the `base.html` template and provides a form for adding a new news article. It includes the necessary HTML structure, CSS styling, and Django template tags to render the form and handle form submission.\\n\\n`{% extends \\u0027app/base.html\\u0027 %}`: Extends the base template for the application.\\n`{% load static %}`: Loads the static files for the application.\\n`{% block extra_css %}`: Defines a block for additional CSS files to be included.\\n`{% block content %}`: Defines the main content block of the template.\\n`\\u003cdiv class\\u003d\\\&quot;container\\\&quot;\\u003e`: Wraps the form container in a container element.\\n`\\u003cdiv class\\u003d\\\&quot;form-container\\\&quot;\\u003e`: Wraps the form in a form container.\\n`\\u003cform method\\u003d\\\&quot;post\\\&quot; novalidate\\u003e`: Renders the form with a POST method and disables the default form validation.\\n`{% csrf_token %}`: Includes the CSRF token for form security.\\n`{{ form.non_field_errors }}`: Displays any non-field errors from the form.\\n`\\u003cdiv class\\u003d\\\&quot;form-group\\\&quot;\\u003e`: Wraps each form field in a form group.\\n`{{ form.title }}`: Renders the title field of the form.\\n`{% if form.title.errors %}`: Displays any errors for the title field.\\n`{{ form.content }}`: Renders the content field of the form.\\n`{% if form.content.errors %}`: Displays any errors for the content field.\\n`\\u003cbutton type\\u003d\\\&quot;submit\\\&quot; class\\u003d\\\&quot;btn btn-primary\\\&quot;\\u003e`: Renders the submit button for the form.\\n`\\u003ca href\\u003d\\\&quot;{% url \\u0027app:index\\u0027 %}\\\&quot; class\\u003d\\\&quot;btn\\\&quot; style\\u003d\\\&quot;margin-left: 10px;\\\&quot;\\u003e`: Renders a link to the index page.\&quot;,\&quot;/app/admin.py\&quot;:\&quot;This file does not contain any classes or functions. It is a Django admin file that is used to register models with the Django admin interface. The `django.contrib.admin` module provides a way to create an administrative interface for your Django application, allowing you to manage the data in your models through a web-based interface.\&quot;,\&quot;/README.md\&quot;:\&quot;This file appears to be a heading for a document titled \\\&quot;ML-Django\\\&quot;. It does not contain any classes or functions. The file likely serves as an introduction or overview for a project or topic related to machine learning and the Django web framework.\&quot;,\&quot;/app/forms/user_profile_form.py\&quot;:\&quot;`UserProfileForm`: A Django form class that represents the user profile model, with the `role` field set to read-only.\\n\\nThe file defines a Django form class `UserProfileForm` that is used to represent the `User` model. The form includes fields for `username`, `email`, and `role`, with the `role` field set to read-only.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/Spirit/PycharmProjects/ML-Django&quot;:&quot;{\&quot;/app/forms/__init__.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/forms/__init__.py\&quot;,\&quot;file_name\&quot;:\&quot;__init__.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/forms/news_form.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/forms/news_form.py\&quot;,\&quot;file_name\&quot;:\&quot;news_form.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/forms/password_update_form.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/forms/password_update_form.py\&quot;,\&quot;file_name\&quot;:\&quot;password_update_form.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;clean_old_password\&quot;,\&quot;method_parameters\&quot;:\&quot;(self)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;self\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[13,52]]},{\&quot;method_name\&quot;:\&quot;clean_new_password1\&quot;,\&quot;method_parameters\&quot;:\&quot;(self)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;self\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[20,23]]},{\&quot;method_name\&quot;:\&quot;clean_new_password2\&quot;,\&quot;method_parameters\&quot;:\&quot;(self)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;self\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[22,4],[26,24]]}]},\&quot;/app/forms/upload_analusics_form.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/forms/upload_analusics_form.py\&quot;,\&quot;file_name\&quot;:\&quot;upload_analusics_form.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;extract_patient_data\&quot;,\&quot;method_parameters\&quot;:\&quot;(self, pdf_file)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;self\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;pdf_file\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[55,9]]}]},\&quot;/app/forms/user_login_form.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/forms/user_login_form.py\&quot;,\&quot;file_name\&quot;:\&quot;user_login_form.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/forms/user_profile_form.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/forms/user_profile_form.py\&quot;,\&quot;file_name\&quot;:\&quot;user_profile_form.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;__init__\&quot;,\&quot;method_parameters\&quot;:\&quot;(self, *args, **kwargs)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;self\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,4],[7,59]]}]},\&quot;/app/forms/user_register_form.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/forms/user_register_form.py\&quot;,\&quot;file_name\&quot;:\&quot;user_register_form.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/migrations/views/analysis_views.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/migrations/views/analysis_views.py\&quot;,\&quot;file_name\&quot;:\&quot;analysis_views.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;upload_analysis\&quot;,\&quot;method_parameters\&quot;:\&quot;(request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,0],[41,70]]}]},\&quot;/app/migrations/views/auth_views.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/migrations/views/auth_views.py\&quot;,\&quot;file_name\&quot;:\&quot;auth_views.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;register_view\&quot;,\&quot;method_parameters\&quot;:\&quot;(request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,0],[17,63]]},{\&quot;method_name\&quot;:\&quot;login_view\&quot;,\&quot;method_parameters\&quot;:\&quot;(request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,0],[27,60]]},{\&quot;method_name\&quot;:\&quot;logout_view\&quot;,\&quot;method_parameters\&quot;:\&quot;(request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[29,0],[31,32]]}]},\&quot;/app/migrations/views/news_views.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/migrations/views/news_views.py\&quot;,\&quot;file_name\&quot;:\&quot;news_views.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;index\&quot;,\&quot;method_parameters\&quot;:\&quot;(request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,0],[9,70]]},{\&quot;method_name\&quot;:\&quot;add_news\&quot;,\&quot;method_parameters\&quot;:\&quot;(request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,0],[22,63]]}]},\&quot;/app/migrations/views/profile_views.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/migrations/views/profile_views.py\&quot;,\&quot;file_name\&quot;:\&quot;profile_views.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;profile_view\&quot;,\&quot;method_parameters\&quot;:\&quot;(request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,0],[39,6]]}]},\&quot;/app/migrations/0001_initial.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/migrations/0001_initial.py\&quot;,\&quot;file_name\&quot;:\&quot;0001_initial.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/migrations/__init__.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/migrations/__init__.py\&quot;,\&quot;file_name\&quot;:\&quot;__init__.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/models/__init__.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/models/__init__.py\&quot;,\&quot;file_name\&quot;:\&quot;__init__.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/models/analysis.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/models/analysis.py\&quot;,\&quot;file_name\&quot;:\&quot;analysis.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/models/news.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/models/news.py\&quot;,\&quot;file_name\&quot;:\&quot;news.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/models/user.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/models/user.py\&quot;,\&quot;file_name\&quot;:\&quot;user.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/static/css/base.css\&quot;:{\&quot;file_path\&quot;:\&quot;/app/static/css/base.css\&quot;,\&quot;file_name\&quot;:\&quot;base.css\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/static/css/profile.css\&quot;:{\&quot;file_path\&quot;:\&quot;/app/static/css/profile.css\&quot;,\&quot;file_name\&quot;:\&quot;profile.css\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/static/css/result.css\&quot;:{\&quot;file_path\&quot;:\&quot;/app/static/css/result.css\&quot;,\&quot;file_name\&quot;:\&quot;result.css\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/static/css/upload.css\&quot;:{\&quot;file_path\&quot;:\&quot;/app/static/css/upload.css\&quot;,\&quot;file_name\&quot;:\&quot;upload.css\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/static/js/upload.js\&quot;:{\&quot;file_path\&quot;:\&quot;/app/static/js/upload.js\&quot;,\&quot;file_name\&quot;:\&quot;upload.js\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/templates/app/add_news.html\&quot;:{\&quot;file_path\&quot;:\&quot;/app/templates/app/add_news.html\&quot;,\&quot;file_name\&quot;:\&quot;add_news.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/templates/app/base.html\&quot;:{\&quot;file_path\&quot;:\&quot;/app/templates/app/base.html\&quot;,\&quot;file_name\&quot;:\&quot;base.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/templates/app/index.html\&quot;:{\&quot;file_path\&quot;:\&quot;/app/templates/app/index.html\&quot;,\&quot;file_name\&quot;:\&quot;index.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/templates/app/login.html\&quot;:{\&quot;file_path\&quot;:\&quot;/app/templates/app/login.html\&quot;,\&quot;file_name\&quot;:\&quot;login.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/templates/app/profile.html\&quot;:{\&quot;file_path\&quot;:\&quot;/app/templates/app/profile.html\&quot;,\&quot;file_name\&quot;:\&quot;profile.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/templates/app/register.html\&quot;:{\&quot;file_path\&quot;:\&quot;/app/templates/app/register.html\&quot;,\&quot;file_name\&quot;:\&quot;register.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/templates/app/upload_analysis.html\&quot;:{\&quot;file_path\&quot;:\&quot;/app/templates/app/upload_analysis.html\&quot;,\&quot;file_name\&quot;:\&quot;upload_analysis.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/templates/app/upload_analysis_result.html\&quot;:{\&quot;file_path\&quot;:\&quot;/app/templates/app/upload_analysis_result.html\&quot;,\&quot;file_name\&quot;:\&quot;upload_analysis_result.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/__init__.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/__init__.py\&quot;,\&quot;file_name\&quot;:\&quot;__init__.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/admin.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/admin.py\&quot;,\&quot;file_name\&quot;:\&quot;admin.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/apps.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/apps.py\&quot;,\&quot;file_name\&quot;:\&quot;apps.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/tests.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/tests.py\&quot;,\&quot;file_name\&quot;:\&quot;tests.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/urls.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/urls.py\&quot;,\&quot;file_name\&quot;:\&quot;urls.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/wsgi.py\&quot;:{\&quot;file_path\&quot;:\&quot;/app/wsgi.py\&quot;,\&quot;file_name\&quot;:\&quot;wsgi.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/ml_model/__init__.py\&quot;:{\&quot;file_path\&quot;:\&quot;/ml_model/__init__.py\&quot;,\&quot;file_name\&quot;:\&quot;__init__.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/ml_model/model_module.py\&quot;:{\&quot;file_path\&quot;:\&quot;/ml_model/model_module.py\&quot;,\&quot;file_name\&quot;:\&quot;model_module.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;predict_glucose_level\&quot;,\&quot;method_parameters\&quot;:\&quot;(X)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;X\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[4,0],[14,83]]}]},\&quot;/settings/__init__.py\&quot;:{\&quot;file_path\&quot;:\&quot;/settings/__init__.py\&quot;,\&quot;file_name\&quot;:\&quot;__init__.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings/settings.py\&quot;:{\&quot;file_path\&quot;:\&quot;/settings/settings.py\&quot;,\&quot;file_name\&quot;:\&quot;settings.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings/urls.py\&quot;:{\&quot;file_path\&quot;:\&quot;/settings/urls.py\&quot;,\&quot;file_name\&quot;:\&quot;urls.py\&quot;,\&quot;methods\&quot;:[]},\&quot;/manage.py\&quot;:{\&quot;file_path\&quot;:\&quot;/manage.py\&quot;,\&quot;file_name\&quot;:\&quot;manage.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,0],[13,39]]}]},\&quot;/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/testing_modules.py\&quot;:{\&quot;file_path\&quot;:\&quot;/testing_modules.py\&quot;,\&quot;file_name\&quot;:\&quot;testing_modules.py\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;extract_patient_data\&quot;,\&quot;method_parameters\&quot;:\&quot;(pdf_file)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;pdf_file\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,0],[46,5]]}]}}&quot;}" />
  </component>
</project>